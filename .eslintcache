[{"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\index.js":"1","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\reportWebVitals.js":"2","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\App.js":"3","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\Header.js":"4","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\Technologies.js":"5","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\Footer.js":"6","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Header\\Header.js":"7","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Navbar\\Navbar.js":"8","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\Profile.js":"9","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\MyPosts\\MyPost.js":"10","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\MyPosts\\Post\\Post.js":"11","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Dialogs\\Dialogs.jsx":"12","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js":"13","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"14","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Dialogs\\Message\\Message.jsx":"15","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\state.js":"16","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\render.js":"17","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\sidebar-reducer.js":"18","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\profile-reducer.js":"19","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\dialogs-reducer.js":"20","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\redux-store.js":"21","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\MyPosts\\MyPostContainer.js":"22","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Dialogs\\DialogsContainer.jsx":"23","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\StoreContext.js":"24","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Users\\Users.jsx":"25","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\user-reducer.js":"26","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Users\\UsersContainer.jsx":"27","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Users\\UsersC.jsx":"28","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\common\\preloader\\Preloader.jsx":"29","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileContainer.jsx":"30","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\auth-reducer.js":"31","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Header\\HeaderContainer.js":"32","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\api\\api.js":"33","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Login\\Login.js":"34","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\hoc\\AuthRedirect.js":"35","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.js":"36","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\utils\\validators\\validators.js":"37","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\common\\FormsControls\\FormsControls.js":"38","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\app-reducer.js":"39","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\users-selectors.js":"40","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileInfo\\ProfileStatusReactHooks.js":"41","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\utils\\object-helper.js":"42","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\common\\pagination\\Paginator.jsx":"43","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Users\\User.jsx":"44","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\hoc\\withSuspense.js":"45","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.js":"46"},{"size":242,"mtime":1612881303935,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"50"},{"size":3230,"mtime":1613556240750,"results":"51","hashOfConfig":"48"},{"size":382,"mtime":1608885319497,"results":"52","hashOfConfig":"50"},{"size":353,"mtime":1608885319168,"results":"53","hashOfConfig":"50"},{"size":228,"mtime":1608961016014,"results":"54","hashOfConfig":"50"},{"size":8067,"mtime":1612587817331,"results":"55","hashOfConfig":"48"},{"size":774,"mtime":1609903876355,"results":"56","hashOfConfig":"48"},{"size":565,"mtime":1612955874090,"results":"57","hashOfConfig":"48"},{"size":1435,"mtime":1612770737177,"results":"58","hashOfConfig":"48"},{"size":6612,"mtime":1609255299182,"results":"59","hashOfConfig":"48"},{"size":2006,"mtime":1612434741306,"results":"60","hashOfConfig":"48"},{"size":3069,"mtime":1613542484023,"results":"61","hashOfConfig":"48"},{"size":328,"mtime":1609211942325,"results":"62","hashOfConfig":"48"},{"size":197,"mtime":1609212033351,"results":"63","hashOfConfig":"48"},{"size":1710,"mtime":1609641992960,"results":"64","hashOfConfig":"50"},{"size":480,"mtime":1609305098598,"results":"65","hashOfConfig":"50"},{"size":141,"mtime":1609644682509,"results":"66","hashOfConfig":"48"},{"size":3738,"mtime":1613556654106,"results":"67","hashOfConfig":"48"},{"size":1003,"mtime":1612351791458,"results":"68","hashOfConfig":"48"},{"size":892,"mtime":1612860694068,"results":"69","hashOfConfig":"48"},{"size":1464,"mtime":1612353544169,"results":"70","hashOfConfig":"48"},{"size":1781,"mtime":1612351791867,"results":"71","hashOfConfig":"48"},{"size":294,"mtime":1609741746592,"results":"72","hashOfConfig":"48"},{"size":1467,"mtime":1612854252257,"results":"73","hashOfConfig":"50"},{"size":4296,"mtime":1612847339393,"results":"74","hashOfConfig":"48"},{"size":3933,"mtime":1612859275633,"results":"75","hashOfConfig":"48"},{"size":1540,"mtime":1612856360833,"results":"76","hashOfConfig":"48"},{"size":246,"mtime":1609989692323,"results":"77","hashOfConfig":"48"},{"size":2378,"mtime":1612955971828,"results":"78","hashOfConfig":"48"},{"size":2412,"mtime":1613548421180,"results":"79","hashOfConfig":"48"},{"size":497,"mtime":1612600586562,"results":"80","hashOfConfig":"48"},{"size":2028,"mtime":1613548160900,"results":"81","hashOfConfig":"48"},{"size":2358,"mtime":1613548260836,"results":"82","hashOfConfig":"48"},{"size":610,"mtime":1611296836398,"results":"83","hashOfConfig":"48"},{"size":1363,"mtime":1611412101620,"results":"84","hashOfConfig":"50"},{"size":278,"mtime":1612366916870,"results":"85","hashOfConfig":"48"},{"size":2040,"mtime":1612854133451,"results":"86","hashOfConfig":"48"},{"size":1026,"mtime":1612622142120,"results":"87","hashOfConfig":"48"},{"size":692,"mtime":1612756483172,"results":"88","hashOfConfig":"48"},{"size":1216,"mtime":1612945718242,"results":"89","hashOfConfig":"48"},{"size":223,"mtime":1612846304255,"results":"90","hashOfConfig":"48"},{"size":1514,"mtime":1613554760022,"results":"91","hashOfConfig":"48"},{"size":1744,"mtime":1612856444509,"results":"92","hashOfConfig":"48"},{"size":396,"mtime":1612932685327,"results":"93","hashOfConfig":"48"},{"size":1544,"mtime":1613542169090,"results":"94","hashOfConfig":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},"9cg8nu",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"519oha",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"107"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"98"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"98"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"98"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"98"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"98"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"98"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\index.js",["223"],"import React from 'react';\nimport store from './redux/redux-store'\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport SamuraiJsApp from \"./App\";\n\n\nReactDOM.render(\n    <SamuraiJsApp />,\n    document.getElementById('root')\n)\n\n\n\n\n\n",["224","225"],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\reportWebVitals.js",[],["226","227"],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\App.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\Header.js",["228","229"],"import React, {Component} from 'react';\r\nimport Technologies from \"./Technologies\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div >\r\n            <ul>\r\n                <li>123</li>\r\n                <li>123</li>\r\n                <li>123</li>\r\n                <li>123</li>\r\n                <li>123</li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;",["230","231"],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\Technologies.js",["232"],"import React, {Component} from 'react';\r\n\r\nconst Technologies = () => {\r\n    return(\r\n        <div>\r\n            <ul>\r\n                <li>dsds</li>\r\n                <li>HTML</li>\r\n                <li>WEBSTORM</li>\r\n                <li>REACT</li>\r\n                <li>OPP</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Technologies;","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\Footer.js",["233"],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Header\\Header.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Navbar\\Navbar.js",["234","235"],"import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n   return <div className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n       <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to={\"/dialogs\"} activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n       <div className={s.item}>\r\n           <NavLink to={\"/users\"} activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n       <div className={s.item}>\r\n            <a>Music</a>\r\n        </div>\r\n       <div className={s.item}>\r\n            <a>Settings</a>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\Profile.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\MyPosts\\MyPost.js",["236"],"import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n// PureComponent\r\n// shouldComponentUpdate(nextProps, nextState) {\r\n//     return nextProps != this.props || nextState != this.state;\r\n// }\r\nconst MyPost = React.memo((props) => {\r\n\r\n    let postElements = props.posts.map(post => <Post message={post.message} likesCount={post.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    const onSubmit = (values) => {\r\n        props.addPost(values.postText)\r\n    }\r\n\r\n    return (\r\n        <div>My posts\r\n            <MyPostReduxForm onSubmit={onSubmit}/>\r\n\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>)\r\n})\r\n\r\n\r\nlet maxLength = maxLengthCreator(10)\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"GGPSDOOEWLSDDS\"} name={\"postText\"} component={TextArea} validate={[required, maxLength]}/>\r\n            </div>\r\n            <div>\r\n                <button>ADD post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst MyPostReduxForm = reduxForm({form: 'PostForm'})(MyPostForm)\r\n\r\nexport default MyPost;","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\MyPosts\\Post\\Post.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Dialogs\\Dialogs.jsx",["237","238","239","240","241","242"],"import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageActionCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let messageElements = state.messages.map(m => <Message message={m.name} key={m.id}/>)\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n\r\n    const onSubmit = (values) => {\r\n        props.sendMessage(values.message)\r\n    }\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n    let onNewMessageBodyChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    if(props.isAuth === false) return <Redirect to={\"/login\"}/>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n\r\n\r\n                    <DialogsReduxForm onSubmit={onSubmit}/>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\nlet maxLength = maxLengthCreator(10)\r\n\r\nconst DialogsForm = (props) => {\r\n   return (\r\n       <form onSubmit={props.handleSubmit}>\r\n           <div>\r\n               <Field placeholder={\"Enter your message\"} name={\"message\"} component={TextArea}  validate={[required, maxLength]}/>\r\n           </div>\r\n\r\n           <div><button>SEND</button></div>\r\n       </form>\r\n   )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form:'dialogs'})(DialogsForm)\r\n\r\nexport default Dialogs;\r\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js",["243"],"import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport photo from './../../../assets/img/user.jpg'\r\nimport ProfileStatusReactHooks from \"./ProfileStatusReactHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit =  (all) => {\r\n        props.saveProfile(all).then(() => {\r\n            setEditMode(false)\r\n        })\r\n\r\n    }\r\n    return (\r\n        <div>\r\n        <div>\r\n            <img\r\n                src=\"https://static.toiimg.com/thumb/msid-73070532,width-1070,height-580,imgsize-1209854,resizemode-75,overlay-toi_sw,pt-32,y_pad-40/photo.jpg\"\r\n                alt=\"\"/>\r\n        </div>\r\n            <div className={s.descriptionBlock} >\r\n                <img src={props.profile.photos.large || photo} className={s.mainPhoto}/>\r\n                {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                {editMode ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>\r\n                : <ProfileData goToEditMode={() => {setEditMode(true)}}\r\n                                 profile={props.profile} isOwner={props.isOwner}/>}\r\n                <ProfileStatusReactHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst ProfileData = ({profile,isOwner,goToEditMode}) => {\r\n    debugger\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob? \"yes\" : \"no\"}\r\n        </div>\r\n        { profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>}\r\n        <div>\r\n            <b>aboutMe</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contancts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle,contactValue}) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n// aboutMe: null\r\n// contacts: {facebook: null, website: null, vk: null, twitter: null, instagram: null, …}\r\n// fullName: \"Bektur\"\r\n// lookingForAJob: false\r\n// lookingForAJobDescription: null\r\n// photos: {small: \"https://social-network.samuraijs.com/activecontent/images/users/13830/user-small.jpg?v=1\",\r\n//     large: \"https://social-network.samuraijs.com/activecontent/images/users/13830/user.jpg?v=1\"}\r\n// userId: 13830\r\n\r\n\r\nexport default ProfileInfo;","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Dialogs\\Message\\Message.jsx",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\state.js",["244","245","246","247"],"import profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\n\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\nconst SEND_MESSAGE = 'SEND_MESSAGE'\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                {id: 1, message: 'hi', likesCount: 12},\n                {id: 2, message: 'How are you ', likesCount: 11},\n            ],\n            newPostText: 'it-kamasutra'\n        },\n        dialogsPage: {\n            dialogs: [\n                {id: 1, name: 'Dimich'},\n                {id: 2, name: 'Sasha'},\n                {id: 3, name: 'Gregory'},\n                {id: 4, name: 'Masha'},\n                {id: 5, name: 'Hermos'},\n\n            ],\n            messages: [\n                {id: 1, name: 'hi'},\n                {id: 2, name: 'How are you '},\n                {id: 3, name: 'YO'},\n                {id: 4, name: 'YO'},\n                {id: 5, name: 'YO'},\n\n            ],\n            newMessageBody: \"\"\n        },\n        sidebar: {}\n    },\n\n    _callSubscriber(state) {\n        console.log(\"HELLO WORLD\")\n    },\n    subscribe(observer) {\n        this._callSubscriber = observer\n    },\n    getState() {\n\n        return this._state\n    },\n\n    dispatch(action) {\n\n        this._state.profilePage = profileReducer(this._state.profilePage,action)\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage,action)\n        this._state.sidebar = sidebarReducer(this._state.sidebar,action)\n        this._callSubscriber(this._state)\n\n    }\n}\n\n\n\n\n\n\n\nexport default store\nwindow.store = store\n",["248","249"],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\render.js",["250"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {addPost, updateNewPostText} from './redux/state'\n\n\nexport let rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App state={state} addPost={addPost} updateNewPostText={updateNewPostText}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    )\n};\n\n\n\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\sidebar-reducer.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\profile-reducer.js",["251","252","253","254","255"],"import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {setTotalUsersCount, setUsers, toggleIsFetching} from \"./user-reducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SUCCESS_PHOTOS = 'SUCCESS_PHOTOS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'hi', likesCount: 12},\r\n        {id: 2, message: 'How are you ', likesCount: 11},\r\n    ],\r\n    profile:null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts:[...state.posts,newPost],\r\n                newPostText: ''\r\n            }\r\n\r\n            // let stateCopy = {...state}\r\n            // stateCopy.posts = [...state.posts]\r\n            // stateCopy.posts.push(newPost)\r\n            // stateCopy.newPostText = '';\r\n            // return stateCopy\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state,profile:action.profile}\r\n\r\n        }case SET_STATUS: {\r\n            return {...state,status:action.status}\r\n\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state,posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case SUCCESS_PHOTOS: {\r\n            return {...state,profile: {...state.profile,photos:action.photos}}\r\n        }\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST,newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const deleteUserProfile = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const setNewStatusActionCreator = (status) => ({type: SET_STATUS, status})\r\nexport const savePhotoSuccessActionCreator = (photos) => ({type: SUCCESS_PHOTOS, photos})\r\n\r\nexport const getUserThunk = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getUser(userId).then(response => {\r\n\r\n            dispatch(setUserProfile(response.data))\r\n        })\r\n    }\r\n}\r\nexport const getStatusThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n\r\n            dispatch(setNewStatusActionCreator(response.data))\r\n        })\r\n    }\r\n}\r\nexport const updateStatusThunk = (status) => (dispatch) => {\r\n    try {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if(response.data.resultCode === 0) {\r\n\r\n                dispatch(setNewStatusActionCreator(status))\r\n            }\r\n        })\r\n    }catch (error){\r\n        console.log(error)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const savePhoto = (file) =>async(dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if(response.data.resultCode === 0) {\r\n\r\n        dispatch(savePhotoSuccessActionCreator(response.data.data.photos))\r\n    }\r\n}\r\nexport const saveProfile = (profile) =>async(dispatch,getState) => {\r\n    const userId = getState().auth.userId;\r\n\r\n    let response = await profileAPI.saveProfile(profile);\r\n\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(getUserThunk(userId))\r\n    }else{\r\n        dispatch(stopSubmit(\"dataForm\",{_error: response.data.messages[0]}))\r\n\r\n\r\n        // dispatch(stopSubmit(\"dataForm\",{\"contacts\": {\"facebook\": response.data.messages[0]}}))\r\n        // (\"login\", {_error: message}))\r\n\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\dialogs-reducer.js",["256"],"const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimich'},\r\n        {id: 2, name: 'Sasha'},\r\n        {id: 3, name: 'Gregory'},\r\n        {id: 4, name: 'Masha'},\r\n        {id: 5, name: 'Hermos'},\r\n\r\n    ],\r\n    messages: [\r\n        {id: 1, name: 'hi'},\r\n        {id: 2, name: 'How are you '},\r\n        {id: 3, name: 'YO'},\r\n        {id: 4, name: 'YO'},\r\n        {id: 5, name: 'YO'},\r\n\r\n    ]\r\n\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, name: body}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({type: SEND_MESSAGE,newMessageBody})\r\n\r\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\redux-store.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\MyPosts\\MyPostContainer.js",["257"],"import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n// const MyPostContainer = (props) => {\r\n//     debugger\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>{\r\n//             (store) => {\r\n//                 let state = store.getState();\r\n//\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostActionCreator())\r\n//                 }\r\n//\r\n//                 let onPostChange = (text) => {\r\n//\r\n//                     let action = updateNewPostTextActionCreator(text)\r\n//\r\n//                     store.dispatch(action)\r\n//                 }\r\n//                 return <MyPost updateNewPostText={onPostChange} addPost={addPost}\r\n//                                newPostText={state.profilePage.newPostText}\r\n//                                posts={state.profilePage.posts}/>\r\n//             }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:(values) => {\r\n            dispatch(addPostActionCreator(values))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\n\r\n\r\nexport default MyPostContainer;","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Dialogs\\DialogsContainer.jsx",["258","259","260","261","262","263","264"],"import React from 'react';\r\nimport {sendMessageActionCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../redux/profile-reducer\";\r\nimport MyPost from \"../Profile/MyPosts/MyPost\";\r\nimport StoreContext from \"../../StoreContext\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n// const DialogsContainer = (props) => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>{\r\n//             (store)=> {\r\n//                 let state = store.getState().dialogsPage;\r\n//\r\n//                 let onSendMessageClick = () => {\r\n//                     store.dispatch(sendMessageActionCreator())\r\n//                 }\r\n//\r\n//                 let onNewMessageBodyChange = (body) => {\r\n//                     store.dispatch(updateNewMessageBodyCreator(body))\r\n//                 }\r\n//\r\n//                 return <Dialogs sendMessage={onSendMessageClick} updateMessage={onNewMessageBodyChange}\r\n//                          dialogsPage={state}/>\r\n//             }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage:(newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = AuthRedirect(Dialogs)\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    AuthRedirect\r\n)(Dialogs)","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\StoreContext.js",["265"],"import React from 'react';\nimport store from \"./redux/redux-store\";\n\nconst StoreContext = React.createContext(null)\n\nexport const Provider = (props) => {\n    return <StoreContext.Provider value={props.store}>\n        {props.children}\n    </StoreContext.Provider>\n}\n\nexport default StoreContext\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Users\\Users.jsx",["266"],"import React from 'react'\r\nimport styles from './users.module.css';\r\nimport * as axios from \"axios\";\r\nimport photo from './../../assets/img/user.jpg'\r\n\r\nconst Users = (props) => {\r\n\r\n    if (props.users.length === 0) {\r\n\r\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/users\").then(response => {\r\n                props.setUsers(response.data.items)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (<div>{\r\n        props.users.map(u => <div key={u.id}>\r\n            <span>\r\n                <div><img src={u.photos.small != null ? u.photos.small : photo} className={styles.userPhoto}/></div>\r\n                <div>\r\n                    {\r\n                        u.followed\r\n                            ? <button onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }}>UnFollow</button>\r\n                            : <button onClick={() => {\r\n                                props.follow(u.id)\r\n                            }}>Follow</button>\r\n                    }\r\n\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.country\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n\r\n    }\r\n    </div>)\r\n}\r\nexport default Users",["267","268"],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\user-reducer.js",["269"],"import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users,action.userId,\"id\",{followed: true})\r\n                // users: state.users.map(u => {\r\n                //         if (u.id === action.userId) {\r\n                //             return {...u, followed: true}\r\n                //         }\r\n                //         return u;\r\n                //     }\r\n                // )\r\n            }\r\n        }\r\n        // users1:{...state.users}}\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users,action.userId,\"id\",{followed: false})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u\r\n                // })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        // case SET_USERS: {return {...state, users: [...state.users,...action.users]}}\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_COUNT, totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\n\r\nexport const getUsersThunk = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch,userId,apiMethod,actionCreator) => {\r\n    dispatch(toggleFollowProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.data.data.resultcode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowProgress(false, userId))\r\n}\r\n\r\n\r\nexport const followThunk = (userId) => {\r\n    return async (dispatch) => {\r\n        let apiMethod = usersAPI.follow.bind(usersAPI)\r\n        let actionCreator = follow;\r\n\r\n        await followUnfollowFlow(dispatch,userId,apiMethod,actionCreator)\r\n\r\n\r\n    }\r\n}\r\nexport const unfollowThunk = (userId) => {\r\n    return async (dispatch) => {\r\n\r\n        await followUnfollowFlow(dispatch,userId,usersAPI.unfollow.bind(usersAPI),unfollow)\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n\r\n\r\n\r\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Users\\UsersContainer.jsx",["270","271","272"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followThunk, getUsersThunk,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers, toggleFollowProgress,\r\n    toggleIsFetching,\r\n    unfollow, unfollowThunk\r\n} from \"../../redux/user-reducer\";\r\nimport UsersC from \"./UsersC\";\r\nimport * as axios from \"axios\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers, getUsersSuperSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersApiContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage,this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsersThunk(pageNumber,this.props.pageSize)\r\n\r\n        this.props.toggleIsFetching(true)\r\n        // this.props.setCurrentPage(pageNumber)\r\n        // usersAPI.getUsers(pageNumber,this.props.pageSize).then(data => {\r\n        //     this.props.toggleIsFetching(false)\r\n        //     // this.props.setUsers(data.items)\r\n        // })\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <UsersC totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    toggleFollowProgress={this.props.toggleFollowProgress}\r\n                    followThunk = {this.props.followThunk}\r\n                    unfollowThunk={this.props.unfollowThunk}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//\r\n//         unfollow:(userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers:(users) => {\r\n//             dispatch(setUsersAc(users))\r\n//         },\r\n//         setCurrentPage:(pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount:(totalUsersCount) => {\r\n//             dispatch(setTotalCountAC(totalUsersCount))\r\n//         },\r\n//         toggleIsFetching:(isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n\r\n// const UsersContainer = connect(mapStateToProps,\r\n//     {\r\n//         follow,\r\n//         unfollow,\r\n//         setUsers,\r\n//         setCurrentPage,\r\n//         setTotalUsersCount,\r\n//         toggleIsFetching,\r\n//         toggleFollowProgress,\r\n//          getUsersThunk,\r\n//         followThunk,\r\n//         unfollowThunk\r\n//     })(withRedirect);\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            follow,\r\n            unfollow,\r\n            setUsers,\r\n            setCurrentPage,\r\n            setTotalUsersCount,\r\n            toggleIsFetching,\r\n            toggleFollowProgress,\r\n            getUsersThunk,\r\n            followThunk,\r\n            unfollowThunk\r\n        }),\r\n\r\n    AuthRedirect\r\n)(UsersApiContainer)\r\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Users\\UsersC.jsx",["273","274","275","276","277","278"],"import React from 'react'\r\nimport styles from './users.module.css';\r\nimport * as axios from \"axios\";\r\nimport photo from './../../assets/img/user.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {toggleFollowProgress} from \"../../redux/user-reducer\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport Paginator from \"../common/pagination/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet UsersC = ({currentPage,totalUsersCount,pageSize,onPageChanged,followingInProgress,unfollowThunk,followThunk,...props}) => {\r\n\r\n    // let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    //\r\n    // let pages = []\r\n    // for (let i = 1; i <= pagesCount; i++) {\r\n    //     pages.push(i);\r\n    // }\r\n\r\n\r\n    return (<div>\r\n        {/*<div>*/}\r\n        {/*    {pages.map(p => {*/}\r\n        {/*        return <span className={props.currentPage === p && styles.selectedPage}*/}\r\n        {/*                     onClick={(e) => {*/}\r\n        {/*                         props.onPageChanged(p)*/}\r\n        {/*                     }}>{p}</span>*/}\r\n        {/*    })}*/}\r\n\r\n        {/*</div>*/}\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount} pageSize={pageSize}/>\r\n\r\n        <div>\r\n        {\r\n            props.users.map(user => <User user={user} key={user.id} followingInProgress={followingInProgress}\r\n                                          unfollowThunk={unfollowThunk}followThunk={followThunk}/>)\r\n        }\r\n        </div>\r\n    </div>)\r\n\r\n}\r\n\r\nexport default UsersC","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\common\\preloader\\Preloader.jsx",["279"],"import React from 'react';\r\nimport preloader from \"../../../assets/img/loader.gif\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={{backgroundColor: 'white'} }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default  Preloader","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileContainer.jsx",["280","281","282","283","284","285"],"import React from 'react';\r\nimport s from './Profile.module.css'\r\n\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunk,\r\n    getUserThunk,\r\n    savePhoto,\r\n    saveProfile,\r\n    setUserProfile,\r\n    updateStatusThunk\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshComponents(){\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        // usersAPI.getUser(userId).then(response => {\r\n        //\r\n        //     this.props.setUserProfile(response.data)\r\n        // })\r\n        this.props.getUserThunk(userId)\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.refreshComponents()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshComponents()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className={s.content}>\r\n            <Profile {...this.props} isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatusThunk}\r\n                    savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n            />\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\n// let AuthRedirectComponent = AuthRedirect(ProfileContainer)\r\n//\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent)\r\n\r\n// connect(mapStateToProps,{getUserThunk})(WithUrlDataContainerComponent);\r\nexport default compose(\r\n    connect(mapStateToProps,{getUserThunk,getStatusThunk,updateStatusThunk,savePhoto,saveProfile}),\r\n    withRouter,\r\n    // AuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\auth-reducer.js",["286","287","288","289"],"import {securityAPI, usersAPI} from \"../api/api\";\r\nimport {setTotalUsersCount, setUsers, toggleIsFetching} from \"./user-reducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL = 'samurai-network/auth/SET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl:null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL:{\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getCaptchaURL = (captchaUrl) => ({type: GET_CAPTCHA_URL, payload: {captchaUrl}})\r\n\r\n\r\nexport const getAuthUserThunk = () => async (dispatch) => {\r\n    let response = await usersAPI.authMe()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe,captcha) => async (dispatch) => {\r\n\r\n       let response = await usersAPI.login(email, password, rememberMe,captcha).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserThunk())\r\n            } else {\r\n                if(response.data.resultCode === 10){\r\n                    dispatch(getCaptcha())\r\n                }\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\"\r\n                dispatch(stopSubmit(\"login\", {_error: message}))\r\n            }\r\n\r\n        })\r\n}\r\nexport const getCaptcha = () => async (dispatch) => {\r\n\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    let captchaUrl = response.data.url\r\n    dispatch(getCaptchaURL(captchaUrl))\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        usersAPI.logout().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n\r\n\r\n\r\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Header\\HeaderContainer.js",["290"],"import React from 'react';\r\nimport Header from \"./Header\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserThunk, logout, setAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderComponent extends React.Component{\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData,logout})(HeaderComponent)","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\api\\api.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Login\\Login.js",["291","292","293","294"],"import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input, TextArea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router\";\r\nimport s from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nlet maxLength = maxLengthCreator(50)\r\n\r\nconst LoginForm = ({error,handleSubmit,captchaUrl}) => {\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <div>{createField(\"Email\",\"email\",[required],Input)}</div>\r\n            <div>{createField(\"password\",\"password\",[required],Input,{type:\"password\"})}</div>\r\n            <div>{createField(null,\"rememberMe\",[required],Input,{type:\"checkbox\"},\"remember me\")}REMEMBER ME</div>\r\n\r\n\r\n            {/*<div><Field placeholder={\"Email\"} name={\"email\"}  component={Input} validate={[required, maxLength]}/></div>*/}\r\n            {/*<div><Field placeholder={\"password\"} name={\"password\"}   component={Input} validate={[required, maxLength]}/></div>*/}\r\n            {/*<div><Field placeholder={\"rememberMe\"} name={\"rememberMe\"} type={\"checkbox\"} component={Input} />remember me</div>*/}\r\n\r\n            {/*<div><input placeholder={\"login\"} /></div>*/}\r\n            {/*<div><input placeholder={\"password\"} /></div>*/}\r\n            {/*<div><input type=\"checkbox\"/>rememberME</div>*/}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField(\"symbols\",\"captcha\",[required],Input,{})}\r\n\r\n            {error && <div className={s.formSummeryError}>{error}</div>}\r\n            <div><button>LOGIN</button></div>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = ({email,password,rememberMe,captcha}) => {\r\n       props.login(email,password,rememberMe,captcha)\r\n   }\r\n    if(props.isAuth){\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps,{login})(Login)","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\hoc\\AuthRedirect.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.js",["295","296","297"],"import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    activateEditMode = () => {\r\n        this.state.editmode =\r\n            this.setState({\r\n                editMode: true\r\n            })\r\n\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.state.editmode =\r\n            this.setState({\r\n                editMode: false\r\n            })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                <div><span onDoubleClick={this.activateEditMode}>{this.props.status || \"------\"}</span></div>}\r\n                {this.state.editMode &&\r\n                <div><input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                            value={this.state.status}/></div>}\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus",["298","299"],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\utils\\validators\\validators.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\common\\FormsControls\\FormsControls.js",["300"],"import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nexport const FormControl = ({input, meta: {touched,error}, ...props}) => {\r\n\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = {}) => {\r\n\r\n    return <Field placeholder={placeholder} name={name}\r\n                    validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n                   />\r\n\r\n\r\n}\r\n//\r\n// export const TextArea = ({input, meta, ...props}) => {\r\n//\r\n//     const hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//                 <textarea {...input} {...props}/>\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// export const Input = ({input, meta, ...props}) => {\r\n//\r\n//     const hasError = meta.touched && meta.error;\r\n//     return (\r\n//         <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//                 <input {...input} {...props}/>\r\n//             </div>\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n\r\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\app-reducer.js",["301","302","303","304","305"],"import {usersAPI} from \"../api/api\";\r\nimport {setTotalUsersCount, setUsers, toggleIsFetching} from \"./user-reducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserThunk} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized:false\r\n}\r\n\r\nconst appReducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const setInitializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserThunk())\r\n\r\n    Promise.all([promise]).then(() => {\r\n\r\n\r\n        dispatch(setInitializedSuccess())\r\n    })\r\n\r\n    // promise.then(() => {\r\n    //     dispatch(setInitializedSuccess)\r\n    // })\r\n}\r\n\r\nexport default appReducer;\r\n\r\n\r\n\r\n","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\redux\\users-selectors.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileInfo\\ProfileStatusReactHooks.js",["306","307","308"],"import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyPostContainer from \"../MyPosts/MyPostContainer\";\r\n\r\nconst ProfileStatusReactHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode && <div>\r\n                <b>STATUS:</b><span onDoubleClick={activateEditMode}>{props.status || \"------\"}\"</span></div>}\r\n            {editMode && <div onBlur={deactivateEditMode}><input autoFocus={true}\r\n                                                                 onChange={onStatusChange}\r\n                                                                 value={status}/></div>}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusReactHooks","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\utils\\object-helper.js",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\common\\pagination\\Paginator.jsx",[],"C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Users\\User.jsx",["309","310","311","312","313"],"import React from 'react'\r\nimport styles from './users.module.css';\r\nimport * as axios from \"axios\";\r\nimport photo from './../../assets/img/user.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {toggleFollowProgress} from \"../../redux/user-reducer\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport Paginator from \"../common/pagination/Paginator\";\r\n\r\n\r\nlet User = ({user,followingInProgress,unfollowThunk,followThunk}) => {\r\n\r\n    return (<div>\r\n                 <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : photo} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                    </div>\r\n                    <div>\r\n                    {\r\n                        user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                                unfollowThunk(user.id)\r\n\r\n\r\n                            }}>UnFollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n\r\n                                followThunk(user.id)\r\n\r\n                            }}>Follow</button>\r\n                    }\r\n\r\n                </div>\r\n            </span>\r\n                <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n            </div>\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default User","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\hoc\\withSuspense.js",["314","315"],"import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div><Preloader/></div>}>\r\n            <Component {...props } />\r\n        </React.Suspense>\r\n\r\n    }\r\n}","C:\\Users\\Bektur\\WebstormProjects\\untitled\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.js",["316","317","318","319"],"import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport styles from \"./../../common/FormsControls/FormsControls.module.css\"\r\nimport {createField, Input, TextArea} from \"../../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit,profile,error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div> <button>save</button> </div>\r\n        {error && <div className={styles.formSummeryError}>{error}</div>}\r\n        <div>\r\n            <b>Full name</b>: <div>{createField(\"Full name\",\"fullName\",[],Input)}</div>\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>:<div>{createField(\"\",\"lookingForAJob\",[],Input,{type:\"checkbox\"})}</div>\r\n        </div>\r\n         <div>\r\n            <b>My professional skills</b>: <div>{createField(\"My professional skills\",\"lookingForAJobDescription\",[],TextArea)}</div>\r\n        </div>\r\n        <div>\r\n            <b>aboutMe</b>:<div>{createField(\"aboutMe\",\"aboutMe\",[],TextArea)}</div>\r\n        </div>\r\n\r\n        <div>\r\n            <b>Contancts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div>\r\n                <b>{key}:{createField(key,\"contacts.\" + key,[],Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form:'dataForm'})(ProfileDataForm)\r\nexport default LoginReduxForm;",{"ruleId":"320","severity":1,"message":"321","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":13},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"324","replacedBy":"328"},{"ruleId":"326","replacedBy":"329"},{"ruleId":"320","severity":1,"message":"330","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":25},{"ruleId":"320","severity":1,"message":"331","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":20},{"ruleId":"324","replacedBy":"332"},{"ruleId":"326","replacedBy":"333"},{"ruleId":"320","severity":1,"message":"330","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":25},{"ruleId":"320","severity":1,"message":"330","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":25},{"ruleId":"334","severity":1,"message":"335","line":17,"column":13,"nodeType":"336","endLine":17,"endColumn":16},{"ruleId":"334","severity":1,"message":"335","line":20,"column":13,"nodeType":"336","endLine":20,"endColumn":16},{"ruleId":"320","severity":1,"message":"337","line":16,"column":9,"nodeType":"322","messageId":"323","endLine":16,"endColumn":23},{"ruleId":"320","severity":1,"message":"338","line":3,"column":9,"nodeType":"322","messageId":"323","endLine":3,"endColumn":16},{"ruleId":"320","severity":1,"message":"339","line":6,"column":9,"nodeType":"322","messageId":"323","endLine":6,"endColumn":33},{"ruleId":"320","severity":1,"message":"340","line":6,"column":35,"nodeType":"322","messageId":"323","endLine":6,"endColumn":62},{"ruleId":"320","severity":1,"message":"341","line":17,"column":9,"nodeType":"322","messageId":"323","endLine":17,"endColumn":23},{"ruleId":"320","severity":1,"message":"342","line":24,"column":9,"nodeType":"322","messageId":"323","endLine":24,"endColumn":27},{"ruleId":"320","severity":1,"message":"343","line":27,"column":9,"nodeType":"322","messageId":"323","endLine":27,"endColumn":31},{"ruleId":"344","severity":1,"message":"345","line":34,"column":17,"nodeType":"336","endLine":34,"endColumn":89},{"ruleId":"320","severity":1,"message":"346","line":5,"column":7,"nodeType":"322","messageId":"323","endLine":5,"endColumn":27},{"ruleId":"320","severity":1,"message":"347","line":6,"column":7,"nodeType":"322","messageId":"323","endLine":6,"endColumn":15},{"ruleId":"320","severity":1,"message":"348","line":7,"column":7,"nodeType":"322","messageId":"323","endLine":7,"endColumn":30},{"ruleId":"320","severity":1,"message":"349","line":8,"column":7,"nodeType":"322","messageId":"323","endLine":8,"endColumn":19},{"ruleId":"324","replacedBy":"350"},{"ruleId":"326","replacedBy":"351"},{"ruleId":"320","severity":1,"message":"352","line":5,"column":8,"nodeType":"322","messageId":"323","endLine":5,"endColumn":23},{"ruleId":"320","severity":1,"message":"353","line":2,"column":9,"nodeType":"322","messageId":"323","endLine":2,"endColumn":27},{"ruleId":"320","severity":1,"message":"354","line":2,"column":29,"nodeType":"322","messageId":"323","endLine":2,"endColumn":37},{"ruleId":"320","severity":1,"message":"355","line":2,"column":39,"nodeType":"322","messageId":"323","endLine":2,"endColumn":55},{"ruleId":"320","severity":1,"message":"346","line":5,"column":7,"nodeType":"322","messageId":"323","endLine":5,"endColumn":27},{"ruleId":"356","severity":1,"message":"357","line":51,"column":66,"nodeType":"358","messageId":"359","endLine":51,"endColumn":68},{"ruleId":"320","severity":1,"message":"348","line":1,"column":7,"nodeType":"322","messageId":"323","endLine":1,"endColumn":30},{"ruleId":"320","severity":1,"message":"360","line":1,"column":8,"nodeType":"322","messageId":"323","endLine":1,"endColumn":13},{"ruleId":"320","severity":1,"message":"360","line":1,"column":8,"nodeType":"322","messageId":"323","endLine":1,"endColumn":13},{"ruleId":"320","severity":1,"message":"340","line":2,"column":35,"nodeType":"322","messageId":"323","endLine":2,"endColumn":62},{"ruleId":"320","severity":1,"message":"361","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":29},{"ruleId":"320","severity":1,"message":"362","line":5,"column":31,"nodeType":"322","messageId":"323","endLine":5,"endColumn":61},{"ruleId":"320","severity":1,"message":"363","line":6,"column":8,"nodeType":"322","messageId":"323","endLine":6,"endColumn":14},{"ruleId":"320","severity":1,"message":"364","line":7,"column":8,"nodeType":"322","messageId":"323","endLine":7,"endColumn":20},{"ruleId":"320","severity":1,"message":"365","line":52,"column":7,"nodeType":"322","messageId":"323","endLine":52,"endColumn":23},{"ruleId":"320","severity":1,"message":"321","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":13},{"ruleId":"344","severity":1,"message":"345","line":19,"column":22,"nodeType":"336","endLine":19,"endColumn":111},{"ruleId":"324","replacedBy":"366"},{"ruleId":"326","replacedBy":"367"},{"ruleId":"356","severity":1,"message":"357","line":69,"column":65,"nodeType":"358","messageId":"359","endLine":69,"endColumn":67},{"ruleId":"320","severity":1,"message":"368","line":12,"column":13,"nodeType":"322","messageId":"323","endLine":12,"endColumn":18},{"ruleId":"320","severity":1,"message":"369","line":14,"column":9,"nodeType":"322","messageId":"323","endLine":14,"endColumn":17},{"ruleId":"320","severity":1,"message":"370","line":23,"column":5,"nodeType":"322","messageId":"323","endLine":23,"endColumn":13},{"ruleId":"320","severity":1,"message":"371","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":14},{"ruleId":"320","severity":1,"message":"368","line":3,"column":13,"nodeType":"322","messageId":"323","endLine":3,"endColumn":18},{"ruleId":"320","severity":1,"message":"372","line":4,"column":8,"nodeType":"322","messageId":"323","endLine":4,"endColumn":13},{"ruleId":"320","severity":1,"message":"338","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":16},{"ruleId":"320","severity":1,"message":"373","line":6,"column":9,"nodeType":"322","messageId":"323","endLine":6,"endColumn":29},{"ruleId":"320","severity":1,"message":"369","line":7,"column":9,"nodeType":"322","messageId":"323","endLine":7,"endColumn":17},{"ruleId":"344","severity":1,"message":"345","line":6,"column":9,"nodeType":"336","endLine":6,"endColumn":32},{"ruleId":"320","severity":1,"message":"368","line":4,"column":13,"nodeType":"322","messageId":"323","endLine":4,"endColumn":18},{"ruleId":"320","severity":1,"message":"374","line":11,"column":5,"nodeType":"322","messageId":"323","endLine":11,"endColumn":19},{"ruleId":"320","severity":1,"message":"375","line":15,"column":9,"nodeType":"322","messageId":"323","endLine":15,"endColumn":17},{"ruleId":"320","severity":1,"message":"369","line":16,"column":9,"nodeType":"322","messageId":"323","endLine":16,"endColumn":17},{"ruleId":"320","severity":1,"message":"376","line":17,"column":9,"nodeType":"322","messageId":"323","endLine":17,"endColumn":21},{"ruleId":"356","severity":1,"message":"357","line":41,"column":43,"nodeType":"358","messageId":"359","endLine":41,"endColumn":45},{"ruleId":"320","severity":1,"message":"353","line":2,"column":9,"nodeType":"322","messageId":"323","endLine":2,"endColumn":27},{"ruleId":"320","severity":1,"message":"354","line":2,"column":29,"nodeType":"322","messageId":"323","endLine":2,"endColumn":37},{"ruleId":"320","severity":1,"message":"355","line":2,"column":39,"nodeType":"322","messageId":"323","endLine":2,"endColumn":55},{"ruleId":"320","severity":1,"message":"377","line":57,"column":12,"nodeType":"322","messageId":"323","endLine":57,"endColumn":20},{"ruleId":"320","severity":1,"message":"378","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":25},{"ruleId":"320","severity":1,"message":"379","line":2,"column":9,"nodeType":"322","messageId":"323","endLine":2,"endColumn":14},{"ruleId":"320","severity":1,"message":"380","line":3,"column":29,"nodeType":"322","messageId":"323","endLine":3,"endColumn":37},{"ruleId":"320","severity":1,"message":"381","line":10,"column":5,"nodeType":"322","messageId":"323","endLine":10,"endColumn":14},{"ruleId":"344","severity":1,"message":"345","line":29,"column":28,"nodeType":"336","endLine":29,"endColumn":52},{"ruleId":"320","severity":1,"message":"382","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":9},{"ruleId":"383","severity":1,"message":"384","line":11,"column":9,"nodeType":"385","endLine":11,"endColumn":19},{"ruleId":"383","severity":1,"message":"384","line":18,"column":9,"nodeType":"385","endLine":18,"endColumn":19},{"ruleId":"324","replacedBy":"386"},{"ruleId":"326","replacedBy":"387"},{"ruleId":"320","severity":1,"message":"388","line":4,"column":9,"nodeType":"322","messageId":"323","endLine":4,"endColumn":17},{"ruleId":"320","severity":1,"message":"369","line":1,"column":9,"nodeType":"322","messageId":"323","endLine":1,"endColumn":17},{"ruleId":"320","severity":1,"message":"353","line":2,"column":9,"nodeType":"322","messageId":"323","endLine":2,"endColumn":27},{"ruleId":"320","severity":1,"message":"354","line":2,"column":29,"nodeType":"322","messageId":"323","endLine":2,"endColumn":37},{"ruleId":"320","severity":1,"message":"355","line":2,"column":39,"nodeType":"322","messageId":"323","endLine":2,"endColumn":55},{"ruleId":"320","severity":1,"message":"389","line":3,"column":9,"nodeType":"322","messageId":"323","endLine":3,"endColumn":19},{"ruleId":"320","severity":1,"message":"382","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":9},{"ruleId":"320","severity":1,"message":"390","line":3,"column":8,"nodeType":"322","messageId":"323","endLine":3,"endColumn":19},{"ruleId":"320","severity":1,"message":"391","line":4,"column":8,"nodeType":"322","messageId":"323","endLine":4,"endColumn":23},{"ruleId":"320","severity":1,"message":"368","line":3,"column":13,"nodeType":"322","messageId":"323","endLine":3,"endColumn":18},{"ruleId":"320","severity":1,"message":"373","line":6,"column":9,"nodeType":"322","messageId":"323","endLine":6,"endColumn":29},{"ruleId":"320","severity":1,"message":"369","line":7,"column":9,"nodeType":"322","messageId":"323","endLine":7,"endColumn":17},{"ruleId":"320","severity":1,"message":"392","line":8,"column":8,"nodeType":"322","messageId":"323","endLine":8,"endColumn":17},{"ruleId":"344","severity":1,"message":"345","line":17,"column":21,"nodeType":"336","endLine":17,"endColumn":116},{"ruleId":"320","severity":1,"message":"375","line":2,"column":9,"nodeType":"322","messageId":"323","endLine":2,"endColumn":17},{"ruleId":"320","severity":1,"message":"393","line":3,"column":9,"nodeType":"322","messageId":"323","endLine":3,"endColumn":16},{"ruleId":"320","severity":1,"message":"394","line":1,"column":16,"nodeType":"322","messageId":"323","endLine":1,"endColumn":24},{"ruleId":"320","severity":1,"message":"382","line":2,"column":8,"nodeType":"322","messageId":"323","endLine":2,"endColumn":9},{"ruleId":"320","severity":1,"message":"388","line":5,"column":9,"nodeType":"322","messageId":"323","endLine":5,"endColumn":17},{"ruleId":"320","severity":1,"message":"395","line":7,"column":8,"nodeType":"322","messageId":"323","endLine":7,"endColumn":20},"no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","no-native-reassign",["396"],"no-negated-in-lhs",["397"],["396"],["397"],"'Component' is defined but never used.","'Technologies' is defined but never used.",["396"],["397"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'newPostElement' is assigned a value but never used.","'NavLink' is defined but never used.","'sendMessageActionCreator' is defined but never used.","'updateNewMessageBodyCreator' is defined but never used.","'newMessageBody' is assigned a value but never used.","'onSendMessageClick' is assigned a value but never used.","'onNewMessageBodyChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'UPDATE_NEW_POST_TEXT' is assigned a value but never used.","'ADD_POST' is assigned a value but never used.","'UPDATE_NEW_MESSAGE_BODY' is assigned a value but never used.","'SEND_MESSAGE' is assigned a value but never used.",["396"],["397"],"'reportWebVitals' is defined but never used.","'setTotalUsersCount' is defined but never used.","'setUsers' is defined but never used.","'toggleIsFetching' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'React' is defined but never used.","'addPostActionCreator' is defined but never used.","'updateNewPostTextActionCreator' is defined but never used.","'MyPost' is defined but never used.","'StoreContext' is defined but never used.","'DialogsContainer' is assigned a value but never used.",["396"],["397"],"'axios' is defined but never used.","'usersAPI' is defined but never used.","'getUsers' is defined but never used.","'styles' is defined but never used.","'photo' is defined but never used.","'toggleFollowProgress' is defined but never used.","'setUserProfile' is defined but never used.","'Redirect' is defined but never used.","'AuthRedirect' is defined but never used.","'response' is assigned a value but never used.","'getAuthUserThunk' is defined but never used.","'Field' is defined but never used.","'TextArea' is defined but never used.","'maxLength' is assigned a value but never used.","'s' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["396"],["397"],"'required' is defined but never used.","'stopSubmit' is defined but never used.","'ProfileInfo' is defined but never used.","'MyPostContainer' is defined but never used.","'Paginator' is defined but never used.","'connect' is defined but never used.","'useState' is defined but never used.","'handleSubmit' is defined but never used.","no-global-assign","no-unsafe-negation"]